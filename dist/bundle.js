"use strict";(()=>{var w=Object.create;var u=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames;var E=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty;var c=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,o)=>(typeof require<"u"?require:r)[o]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var L=(e,r,o,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of F(r))!I.call(e,t)&&t!==o&&u(e,t,{get:()=>r[t],enumerable:!(n=S(r,t))||n.enumerable});return e};var l=(e,r,o)=>(o=e!=null?w(E(e)):{},L(r||!e||!e.__esModule?u(o,"default",{value:e,enumerable:!0}):o,e));var h=l(c("readline")),m=l(c("path")),a=l(c("os")),T=c("colors");var i=l(c("fs"));function g(e){try{return i.default.readFileSync(e,{encoding:"utf-8"})}catch(r){return new Error(r).message}}function f(e){return i.default.readdirSync(e,{encoding:"utf-8",withFileTypes:!0})}function d(e,r){try{return i.default.renameSync(e,r),"File movied!"}catch(o){return new Error(o).message}}function y(e,r,o){let n="File copied!";try{process.chdir(r),i.default.copyFileSync(e,process.cwd()+"\\"+o)}catch(t){n=new Error(t).message}return n}var p=h.default.createInterface(process.stdin,process.stdout),s=__dirname,C=e=>{try{return process.chdir(e),process.cwd()}catch(r){console.log(new Error(r).message)}return s},x=()=>{let e=a.default.type()==="Linux"?(a.default.userInfo({encoding:"utf-8"}).username+"@"+a.default.hostname()).green+`:${s}-$ `.blue:s.grey+">";p.question(e,r=>{let o=r.split(" ");switch(o[0]){case"cd":s=C(o[1]);break;case"os":console.log(a.default.type());break;case"echo":console.log(o[1]);break;case"cat":let t=g(s+"\\"+o[1]);console.log(t);break;case"ls":let b=f(s);console.table(b);break;case"move":let v=d(m.default.resolve(s,o[1]),m.default.resolve(s,o[2],o[1]));console.log(v);break;case"copy":let k=y(m.default.resolve(s,o[1]),o[2],o[1]);console.log(k);break;case"exit":p.close(),process.exit(0);case"clear":console.log("terminal has cleaned");break;default:console.log("Invalid command")}r!=="exit"&&x()})};x();p.on("close",()=>{console.log("Terminal closed")});})();
